---
title: "bubble"
format: html
editor: visual
---
```{r}
library(flipbookr)
library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa) 
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
require(gridExtra)
library(gganimate)
options(dplyr.summarise.inform = FALSE)
```

```{r}
# Circlepacker package
library(circlepackeR)         
#devtools::install_github("jeromefroe/circlepackeR") # If needed
df <- read.csv("../data/train_final.csv")
df$DATE<-as.Date(df$DATE,"%m/%d/%Y")
data <- dplyr:::select.data.frame(df,DATE, WEATHER,ACCDMG,VISIBLTY)

weather <- data %>%
  mutate(year = year(DATE)) %>% # create a new column for year
  group_by(year, WEATHER,VISIBLTY) %>%
  summarise(count = sum(ACCDMG))
# create a nested data frame giving the info of a nested dataset:
weather <- data.frame(year = weather$year, weather = weather$WEATHER,temp = weather$VISIBLTY,value = weather$count)
# Change the format. This use the data.tree library. This library needs a column that looks like root/group/subgroup/..., so I build it
library(data.tree)
weather$pathString <- paste("world",  weather$year,weather$weather,temp = weather$temp,sep = "/")
population <- as.Node(weather)

# Make the plot
#circlepackeR(population, size = "value")

# You can custom the minimum and maximum value of the color range.
p <- circlepackeR(population, size = "value",width =600, height = 600)

# Add title using htmlwidgets
title <- htmltools::tags$h3("Weather and Visibilty effect on Train Accidents by Year", 
                                                style = "font-size: 20px;font-family: Arial; font-weight: bold; text-align: left;")
subtitle <- htmltools::tags$h4("Source: Federal Railroad Administration", 
                                                style = "font-size: 16px;font-family: Arial; font-style: italic; text-align: left;")
p_final <- htmlwidgets::prependContent(p, title,subtitle)

p_final
# save the widget
library(htmlwidgets)
htmlwidgets::saveWidget(
                widget = p_final,
                file = "../img/bubble/year_weather_damages.html", #the path & file name
                selfcontained = TRUE
                )
```


```{r}
library(data.tree)
weather$pathString <- paste("world", weather$weather,temp = weather$temp,sep = "/")
population <- as.Node(weather)

# Make the plot
#circlepackeR(population, size = "value")

# You can custom the minimum and maximum value of the color range.
p <- circlepackeR(population, size = "value",width =600, height = 600)

# Add title using htmlwidgets
title <- htmltools::tags$h3("Weather and Visibilty effect on Train Accidents", 
                                                style = "font-size: 20px;font-family: Arial; font-weight: bold; text-align: left;")
subtitle <- htmltools::tags$h4("Source: Federal Railroad Administration", 
                                                style = "font-size: 16px;font-family: Arial; font-style: italic; text-align: left;")
p_final <- htmlwidgets::prependContent(p, title,subtitle)

p_final
# save the widget
library(htmlwidgets)
htmlwidgets::saveWidget(
                widget = p_final,
                file = "../img/bubble/weather_damages.html", #the path & file name
                selfcontained = TRUE
                )
```


